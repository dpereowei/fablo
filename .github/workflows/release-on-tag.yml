name: Release on tag

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          VERSION=${TAG:1}
          echo "TAG: $TAG"
          echo "VERSION: $VERSION"
          PKG_JSON_VERSION=$(jq -r '.version' <"$GITHUB_WORKSPACE/package.json")
          if [ "$VERSION" != "$PKG_JSON_VERSION" ]; then
              echo "Version in package.json ($PKG_JSON_VERSION) does not match tag ($VERSION)"
              exit 1
          fi

      - name: Build Fablo
        run: |
          shellcheck --version
          yamllint -v
          npm install
          ./fablo-build.sh

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish Docker image
        run: |
          FABLO_VERSION=$(jq -r '.version' <"$GITHUB_WORKSPACE/package.json")
          docker push ghcr.io/fablo-io/fablo:"$FABLO_VERSION"

      - name: Create GitHub Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            docs/schema.json
            fablo.sh

      - name: Create next development version PR
        run: |
          ./bump_version.sh unstable
          NEW_VERSION=$(jq -r '.version' <"$GITHUB_WORKSPACE/package.json")
          BRANCH_NAME="bump-version-to-$NEW_VERSION"
          git checkout -b $BRANCH_NAME
          git commit -a -m "Set new development version: $NEW_VERSION"
          git push --set-upstream origin bump-version-to-$NEW_VERSION
          git gh pr create --title "Bump Version to $NEW_VERSION" --body "Bump Version to $NEW_VERSION" --label "bump-version-pr" --head "bump-version-to-$NEW_VERSION" --base main
